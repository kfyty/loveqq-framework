{
  "groups": [
    {
      "name": "k",
      "description": "loveqq-framework configuration"
    }
  ],
  "properties": [
    {
      "name": "k.transformer.load",
      "type": "java.lang.Boolean",
      "defaultValue" : "true",
      "description": "是否读取 ClassFileTransformer, 开启此配置，会使用 javassist 修改字节码，会增加少量启动时内存使用量"
    },
    {
      "name": "k.dependency.check",
      "type": "java.lang.Boolean",
      "defaultValue" : "false",
      "description": "是否读取进行依赖检查，出现依赖冲突导致启动失败时，可打开"
    },
    {
      "name": "k.java.system.resources",
      "type": "java.lang.String",
      "description": "java 内部资源不在 jar index 内，JarIndexClassLoader#getResource(String) 可能获取不到，可通过该参数设置，多个由英文分号分割"
    },
    {
      "name": "k.dependency.load-jar-class-path",
      "type": "java.lang.Boolean",
      "defaultValue" : "false",
      "description": "ClassLoaderUtil#resolveClassPath(ClassLoader) 时，是否读取 jar 内的 Class-Path 属性"
    },
    {
      "name": "k.annotation.depth",
      "type": "java.lang.Integer",
      "defaultValue" : "99",
      "description": "嵌套注解解析深度"
    },
    {
      "name": "k.config.io-buffer-size",
      "type": "java.lang.Integer",
      "defaultValue" : "4096",
      "description": "IOUtil 读取流缓冲区大小"
    },
    {
      "name": "logging.root",
      "type": "java.lang.String",
      "defaultValue" : "INFO",
      "description": "日志 root 级别"
    },
    {
      "name": "k.application.name",
      "type": "java.lang.String",
      "description": "应用名称的配置"
    },
    {
      "name": "k.application.lazy-init",
      "type": "java.lang.Boolean",
      "defaultValue" : "false",
      "description": "应用是否整体懒加载，true 时，仅加载 bean 定义，除了需要注入的 bean 外，所有 bean 都不会进行初始化"
    },
    {
      "name": "k.application.concurrent-init",
      "type": "java.lang.Boolean",
      "defaultValue" : "false",
      "description": "应用是否并行初始化，true 时将使用线程池初始化所有的单例 bean"
    },
    {
      "name": "k.config.include",
      "type": "java.util.List<java.lang.String>",
      "description": "配置文件中包含其他配置的配置 key"
    },
    {
      "name": "k.config.location",
      "type": "java.util.List<java.lang.String>",
      "description": "配置文件中包含本地磁盘的配置 key，通过该配置指定的配置文件，支持热刷新。注意：只有通过该配置指定的才支持热刷新，内部通过 k.config.include 包含的嵌套配置不支持"
    },
    {
      "name": "k.config.load-system-property",
      "type": "java.lang.Boolean",
      "defaultValue" : "false",
      "description": "是否加载系统属性到属性配置，系统属性的配置会直接覆盖配置文件的配置"
    }
  ]
}
